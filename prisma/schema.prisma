// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

// datasource db {
//   provider  = "postgresql"
//   url       = env("DATABASE_URL")
//   directUrl = env("DIRECT_URL")
// }

// vercel deployment
datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique
  email    String?
  password String
}

// enum CotizacionStatus {
//   DRAFT // Borrador
//   SENT // Enviada
//   ACCEPTED // Aceptada
//   REJECTED // Rechazada
//   EXPIRED // Expirada
// }

enum CotizacionStatus {
  ESTADO1
  ESTADO2
  ESTADO3
  ESTADO4
  ESTADO5
  ESTADO6
}

enum CurrencyType {
  SOLES
  DOLARES
}

enum SaleStatus {
  CREATED // Venta creada
  TO_CREATE // Venta por crear
  NONE // Ninguna venta
}

model Client {
  id        Int      @id @default(autoincrement())
  name      String
  contact   String
  ruc       String
  reference String
  createAt  DateTime @default(now())

  Cotizacion Cotizacion[]
}

model Cotizacion {
  id              Int              @id @default(autoincrement())
  status          CotizacionStatus @default(ESTADO1)
  code            String
  parentCode      String
  companyPhone    String           @default("")
  companyEmail    String           @default("")
  clientId        Int?
  client          Client?          @relation(fields: [clientId], references: [id])
  //Client ---
  clientName      String
  clientContact   String
  clientRuc       String
  clientReference String

  date         DateTime
  deliverTime  String
  totalPrice   Float
  currencyType CurrencyType @default(SOLES) // Tipo de moneda
  items        Json
  isEdit       Boolean      @default(false)

  //commercial conditions ---
  paymentCondition  String @default("")
  offerValidity     String @default("") // Validez de la oferta
  warranty          String @default("") // Garantía
  bankAccountNumber String @default("") // Número de cuenta bancaria de Movento S.A.C

  // Relación 1:1 con Sale
  saleStatus SaleStatus @default(NONE)
  sale       Sale?
}

model Sale {
  id           Int        @id @default(autoincrement())
  cotizacionId Int        @unique
  cotizacion   Cotizacion @relation(fields: [cotizacionId], references: [id])

  customerOrderDate DateTime? // Fecha OC del Cliente
  customerOrder     String? // OC del Cliente
  line              String? // Línea
  deliveryTime      String? // Plazo de entrega
  deliveryDate      DateTime? // Fecha de entrega
  invoiceNumber     String? // N° Factura
  paymentType       String? // Tipo de pago
  observation       String? // Observación
  paymentMethod     String? // Forma de pago
  startDate         DateTime? // Inicio
  dueDate           DateTime? // Vencimiento
  withoutTax        Float? // Sin IGV
  withTax           Float? // Con IGV
  detraction        Float? // Detracción
  netPayable        Float? // Neto a pagar
  paidAmount        Float? // Abonado
  totalSalePrice    Float? // Precio Venta Total (con IGV)
  status            String? // Estado
  outstandingAmount Float? // Falta
  supplierOrder     String? // No OC a Proveedor
  advancePayment    Float? // Adelanto (con IGV)
  advanceDate       DateTime? // Fecha de Adelanto
  balance           Float? // Saldo (con IGV)
  balanceDate       DateTime? // Fecha de Saldo
  totalCost         Float? // Costo Total (con IGV)
  supplierInvoice   String? // No Factura de Proveedor
  supplierShipment  String? // No Guía de Remisión de Proveedor
  value             Float? // Valor
  percentage        Float? // %
}

model LastCodeCotizacion {
  id           Int @id @default(autoincrement())
  cotizacionId Int
  nextCode     Int @default(0)
}

model CodeCotizacion {
  id       Int @id @default(autoincrement())
  nextCode Int
}
